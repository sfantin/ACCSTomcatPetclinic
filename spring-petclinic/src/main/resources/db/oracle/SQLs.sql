select tablespace_name from dba_tablespaces;

select * from dba_segments where TABLESPACE_NAME = 'USERS';

select * from v$database;

select * from v$PDBS;

alter session set container = PDB1;

CREATE USER petclinic IDENTIFIED BY Welcome123#
DEFAULT TABLESPACE users
TEMPORARY TABLESPACE temp

alter user petclinic quota unlimited on users;

grant connect,resource to petclinic;

--
# mostrar o nome dos datafiles do banco de dados:
select tablespace_name, file_name, bytes/1024/1024 as mbytes from dba_data_files
# alter o tamanho dos datafiles do banco de dados:
alter database datafile 'nome do datafile' resize xxx;
--

-- Init DB
DROP  USER  petclinic CASCADE;

DROP TABLE vet_specialties;

DROP INDEX vets_last_name;
DROP SEQUENCE id_vets_sequence;
DROP TRIGGER id_vets_trigger;
DROP TABLE vets;

DROP INDEX specialties_name;
DROP SEQUENCE id_specialties_sequence;
DROP TRIGGER id_specialties_trigger;
DROP TABLE specialties;

DROP INDEX visits_pet_id;
DROP SEQUENCE id_visits_sequence;
DROP TRIGGER id_visits_trigger;
DROP TABLE visits;

DROP INDEX pets_name;
DROP SEQUENCE id_pets_sequence;
DROP TRIGGER id_pets_trigger;
DROP TABLE pets;

DROP INDEX types_name;
DROP SEQUENCE id_types_sequence;
DROP TRIGGER id_types_trigger;
DROP TABLE types;

DROP INDEX owners_last_name;
DROP SEQUENCE id_owners_sequence;
DROP TRIGGER id_owners_trigger;
DROP TABLE owners;

CREATE TABLE vets (
  id         INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  first_name VARCHAR(30),
  last_name  VARCHAR(30)
);
/
CREATE INDEX vets_last_name ON vets (last_name);
/
CREATE SEQUENCE id_vets_sequence START WITH 1 INCREMENT BY 1;
/
CREATE OR REPLACE TRIGGER id_vets_trigger
BEFORE INSERT
ON vets
FOR EACH ROW
BEGIN
SELECT id_vets_sequence.nextval INTO :NEW.ID FROM dual;
END;
/
ALTER TRIGGER id_vets_trigger ENABLE;
/

CREATE TABLE specialties (
  id   INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  name VARCHAR(80)
);
/
CREATE INDEX specialties_name ON specialties (name);
/
CREATE SEQUENCE id_specialties_sequence START WITH 1 INCREMENT BY 1;
/
CREATE OR REPLACE TRIGGER id_specialties_trigger
BEFORE INSERT
ON specialties
FOR EACH ROW
BEGIN
SELECT id_specialties_sequence.nextval INTO :NEW.ID FROM dual;
END;
/
ALTER TRIGGER id_specialties_trigger ENABLE;
/

CREATE TABLE vet_specialties (
  vet_id       INTEGER NOT NULL,
  specialty_id INTEGER NOT NULL
);
/
ALTER TABLE vet_specialties ADD CONSTRAINT fk_vet_specialties_vets FOREIGN KEY (vet_id) REFERENCES vets (id);
/
ALTER TABLE vet_specialties ADD CONSTRAINT fk_vet_specialties_specialties FOREIGN KEY (specialty_id) REFERENCES specialties (id);
/

CREATE TABLE types (
  id   INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  name VARCHAR(80)
);
/
CREATE INDEX types_name ON types (name);
/
CREATE SEQUENCE id_types_sequence START WITH 1 INCREMENT BY 1;
/
CREATE OR REPLACE TRIGGER id_types_trigger
BEFORE INSERT
ON types
FOR EACH ROW
BEGIN
SELECT id_types_sequence.nextval INTO :NEW.ID FROM dual;
END;
/
ALTER TRIGGER id_types_trigger ENABLE;
/

CREATE TABLE owners (
  id         INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  first_name VARCHAR(30),
  last_name  VARCHAR(30),
  address    VARCHAR(255),
  city       VARCHAR(80),
  telephone  VARCHAR(20)
);
/
CREATE INDEX owners_last_name ON owners (last_name);
/
CREATE SEQUENCE id_owners_sequence START WITH 1 INCREMENT BY 1;
/
CREATE OR REPLACE TRIGGER id_owners_trigger
BEFORE INSERT
ON owners
FOR EACH ROW
BEGIN
SELECT id_owners_sequence.nextval INTO :NEW.ID FROM dual;
END;
/
ALTER TRIGGER id_owners_trigger ENABLE;
/

CREATE TABLE pets (
  id         INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  name       VARCHAR(30),
  birth_date DATE,
  type_id    INTEGER NOT NULL,
  owner_id   INTEGER NOT NULL
);
/
ALTER TABLE pets ADD CONSTRAINT fk_pets_owners FOREIGN KEY (owner_id) REFERENCES owners (id);
/
ALTER TABLE pets ADD CONSTRAINT fk_pets_types FOREIGN KEY (type_id) REFERENCES types (id);
/
CREATE INDEX pets_name ON pets (name);
/
CREATE SEQUENCE id_pets_sequence START WITH 1 INCREMENT BY 1;
/
CREATE OR REPLACE TRIGGER id_pets_trigger
BEFORE INSERT
ON pets
FOR EACH ROW
BEGIN
SELECT id_pets_sequence.nextval INTO :NEW.ID FROM dual;
END;
/
ALTER TRIGGER id_pets_trigger ENABLE;
/

CREATE TABLE visits (
  id          INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  pet_id      INTEGER NOT NULL,
  visit_date  DATE,
  description VARCHAR(255)
);
/
ALTER TABLE visits ADD CONSTRAINT fk_visits_pets FOREIGN KEY (pet_id) REFERENCES pets (id);
/
CREATE INDEX visits_pet_id ON visits (pet_id);
/
CREATE SEQUENCE id_visits_sequence START WITH 1 INCREMENT BY 1;
/
CREATE OR REPLACE TRIGGER id_visits_trigger
BEFORE INSERT
ON visits
FOR EACH ROW
BEGIN
SELECT id_visits_sequence.nextval INTO :NEW.ID FROM dual;
END;
/
ALTER TRIGGER id_visits_trigger ENABLE;
/
